{"version":3,"sources":["helpers/localstorage.ts","contexts/DeckContext.tsx","components/Nav.tsx","components/Input.tsx","components/Modal.tsx","components/AddDeck.tsx","components/DeckSummary.tsx","components/Button.tsx","layouts/DefaultLayout.tsx","pages/Decks.tsx","components/AddCard.tsx","components/CardSummary.tsx","components/SelectedDeckNotFound.tsx","pages/DeckView.tsx","components/Card.tsx","pages/StudyMode.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["LOCAL_STORAGE_KEYS","getLocalSotrageItem","key","retrievedValue","window","localStorage","getItem","JSON","parse","DeckContext","createContext","DECK_ACTIONS","createCard","front","back","newCard","id","uuid","console","log","createDeck","name","description","cards","deckReducer","state","action","type","map","deck","cardBones","deckId","cardId","filter","v","cardd","deckBones","trim","initialDeckState","DeckContextProvider","props","useReducer","deckState","deckContextDispatch","useEffect","data","setItem","stringify","Provider","value","children","classNames","classes","Boolean","join","Nav","navigation","href","current","pathname","useLocation","history","useHistory","as","className","open","Button","aria-hidden","onClick","push","Panel","item","aria-current","undefined","Input","label","placeholder","autocomplete","htmlFor","onChange","inputOnChange","autoComplete","THEME","DANGOR","default","hover","ring","PRIMARY","SUCCESS","WARNING","Modal","handleClose","cancelButtonRef","useRef","Root","show","Fragment","static","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","title","content","submit","theme","ref","AddDeck","useState","modalOpen","setModal","onInputChange","event","updatedNewDeckData","newDeckState","target","setNewDeckState","useContext","updateShowState","cancel","DeckSummary","navToDeck","currentTarget","length","size","BUTTON_SIZE","MEDIUM","BUTTON_THEME","SMALL","LARGE","DefaultLayout","Decks","showAddDeck","setShowAddDeck","AddDeckKit","AddCard","updatedNewCardData","newCardState","setNewCardState","setTimeout","CardSummary","card","front1","front2","back1","back2","SelectedDeckNotFound","DeckView","useParams","showAddCard","setShowAddCard","AddCardKit","selectedDeck","find","element","Card","flip","StudyMode","useMemo","setFlip","flipCard","useCallback","numberOfCards","selectedCard","setSelectedCard","changeCard","steps","newIndex","navHeight","setNavHeight","height","document","getElementById","offsetHeight","navigationHeight","keyRouts","e","isComposing","keyCode","addEventListener","removeEventListener","style","gridTemplateRows","gridTemplateColumns","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0fd3c7a3.chunk.js","sourcesContent":["export const LOCAL_STORAGE_KEYS = {\n  DECK_STATE: \"deckState\"\n}\n\nexport const setLocalSotrageItem = (key: string, data: any): void => {\n  window.localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport const getLocalSotrageItem = (key: string): any | null => {\n  const retrievedValue = window.localStorage.getItem(key)\n  if(!retrievedValue) return null\n  return JSON.parse(retrievedValue)\n}\n\nexport const removeLocalStorageItem = (key: string): void => {\n  window.localStorage.removeItem(key)\n}\n\nexport const deleteLocalStorage = ():void => {\n  window.localStorage.clear()\n}","import { createContext, useEffect, useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport {\n  getLocalSotrageItem,\n  setLocalSotrageItem,\n  LOCAL_STORAGE_KEYS,\n} from \"../helpers/localstorage\";\n\nexport const DeckContext = createContext<any>(null);\n\nexport const DECK_ACTIONS = {\n  NEW_DECK: \"newDeck\",\n  DELETE_DECK: \"deleteDeck\",\n  NEW_CARD: \"newCard\",\n  DELETE_CARD: \"deleteCard\",\n};\n\nconst createCard = (\n  front: string[] = [\"Default Front, line 1\", \"Default Front, line 2\"],\n  back: string[] = [\"Default Back, line 1\", \"Default Back, line 2\"]\n): Card => {\n  const newCard = {\n    front,\n    back,\n    id: uuid(),\n  };\n  console.log(newCard);\n  return newCard;\n};\n\nconst createDeck = (\n  name: string = \"Untitled Deck\",\n  description: string = \"default description\",\n  cards: Card[] = []\n): Deck => {\n  return {\n    name,\n    description,\n    id: uuid(),\n    cards,\n  };\n};\n\nconst deckReducer = (state: Deck[], action: DeckReducerAction) => {\n  console.log(\"deck reducer\");\n  switch (action.type) {\n    case DECK_ACTIONS.NEW_CARD:\n      console.log(\"adding a card\");\n      return [\n        ...state.map((deck: Deck) => {\n          if (!action.cardBones) console.log(\"no 'CardBones' cardBones\");\n          else if (deck.id === action.deckId) {\n            return {\n              name: deck.name,\n              description: deck.description,\n              id: deck.id,\n              cards: [\n                ...deck.cards,\n                createCard(\n                  [...action.cardBones.front],\n                  [...action.cardBones.back]\n                ),\n              ],\n            };\n          }\n          return deck;\n        }),\n      ];\n    case DECK_ACTIONS.DELETE_CARD:\n      if (!action.cardId) {\n        console.log(\"no cardId provided\");\n        return state;\n      } else {\n        console.log(\"Deleting this card: \", action.cardId);\n        return [\n          ...state.map((deck: Deck) => {\n            console.log(\"Im logging from inside a function\");\n            console.log(deck.cards.filter((v) => true));\n            if (deck.id === action.deckId) {\n              return {\n                name: deck.name,\n                description: deck.description,\n                id: deck.id,\n                cards: deck.cards.filter((cardd) => cardd.id !== action.cardId),\n              };\n            } else {\n              console.log(\"no deck with that ID found\");\n            }\n            return deck;\n          }),\n        ];\n      }\n    case DECK_ACTIONS.NEW_DECK:\n      if (!action.deckBones || action.deckBones.name.trim() === \"\") {\n        console.log(\"no infomation to create new deck\");\n        return state;\n      }\n      return [\n        ...state,\n        createDeck(action.deckBones.name, action.deckBones.description),\n      ];\n    case DECK_ACTIONS.DELETE_DECK:\n      return state.filter((deck) => {\n        return deck.id !== action.deckId;\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialDeckState = ((): Deck[] => {\n  const initial = getLocalSotrageItem(LOCAL_STORAGE_KEYS.DECK_STATE)\n    ? getLocalSotrageItem(LOCAL_STORAGE_KEYS.DECK_STATE)\n    : [createDeck(\"Deck 1\", \"My first deck\", [createCard(), createCard()])];\n  return initial;\n})();\n\nexport const DeckContextProvider = (props: any) => {\n  const [deckState, deckContextDispatch] = useReducer(\n    deckReducer,\n    initialDeckState\n  );\n\n  useEffect(() => {\n    setLocalSotrageItem(LOCAL_STORAGE_KEYS.DECK_STATE, deckState);\n  }, [deckState]);\n\n  return (\n    <DeckContext.Provider value={{ deckState, deckContextDispatch }}>\n      {props.children}\n    </DeckContext.Provider>\n  );\n};\n","import { Disclosure } from \"@headlessui/react\";\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nfunction classNames(...classes: any) {\n  return classes.filter(Boolean).join(\" \");\n}\nexport const navHeight = () => {\n  return document.getElementById(\"nav\")?.offsetHeight;\n};\n\nexport default function Nav() {\n  const navigation = [\n    {\n      name: \"Decks\",\n      href: \"/\",\n      current: () => {\n        return pathname === \"/\";\n      },\n    },\n  ];\n\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n\n  return (\n    <Disclosure as=\"nav\" id=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  {/* Put Left hand logo here */}\n                  <div\n                    className=\"cursor-pointer\"\n                    onClick={() => {\n                      history.push(\"/\");\n                    }}\n                  >\n                    <span className=\" h-8 w-auto text-white font-bold\">\n                      www.FlashCard.Monster\n                    </span>\n                  </div>\n                  {/* <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                    alt=\"Workflow\"\n                  /> */}\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  {/* <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current()\n                            ? \"bg-gray-900 text-white\"\n                            : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\n                          \"px-3 py-2 rounded-md text-sm font-medium\"\n                        )}\n                        aria-current={item.current() ? \"page\" : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div> */}\n                </div>\n              </div>\n              {/* <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                {/* <button className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button> */}\n\n              {/* Profile dropdown */}\n              {/* <Menu as=\"div\" className=\"ml-3 relative\">\n                  {({ open }) => (\n                    <>\n                      <div>\n                        <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                          <span className=\"sr-only\">Open user menu</span>\n                          <img\n                            className=\"h-8 w-8 rounded-full\"\n                            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                            alt=\"\"\n                          />\n                        </Menu.Button>\n                      </div>\n                      <Transition\n                        show={open}\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                      >\n                        <Menu.Items\n                          static\n                          className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                        >\n                          <Menu.Item>\n                            {({ active }) => (\n                              <a\n                                href=\"#\"\n                                className={classNames(\n                                  active ? \"bg-gray-100\" : \"\",\n                                  \"block px-4 py-2 text-sm text-gray-700\"\n                                )}\n                              >\n                                Your Profile\n                              </a>\n                            )}\n                          </Menu.Item>\n                          <Menu.Item>\n                            {({ active }) => (\n                              <a\n                                href=\"#\"\n                                className={classNames(\n                                  active ? \"bg-gray-100\" : \"\",\n                                  \"block px-4 py-2 text-sm text-gray-700\"\n                                )}\n                              >\n                                Settings\n                              </a>\n                            )}\n                          </Menu.Item>\n                          <Menu.Item>\n                            {({ active }) => (\n                              <a\n                                href=\"#\"\n                                className={classNames(\n                                  active ? \"bg-gray-100\" : \"\",\n                                  \"block px-4 py-2 text-sm text-gray-700\"\n                                )}\n                              >\n                                Sign out\n                              </a>\n                            )}\n                          </Menu.Item>\n                        </Menu.Items>\n                      </Transition>\n                    </>\n                  )}\n                </Menu>\n              </div> */}\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={classNames(\n                    item.current()\n                      ? \"bg-gray-900 text-white\"\n                      : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\n                    \"block px-3 py-2 rounded-md text-base font-medium\"\n                  )}\n                  aria-current={item.current() ? \"page\" : undefined}\n                >\n                  {item.name}\n                </a>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  );\n}\n\n// function Nav() {\n//   return (\n//     <nav>\n//       <ul>\n//         <li>\n//           <a href=\"/\">Decks</a>\n//         </li>\n//         <li>\n//           <a href=\"/\">Card View</a>\n//         </li>\n//         <li>\n//           <a href=\"/\">Study Mode</a>\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// }\n","export default function Input(props: {\n  label?: string;\n  placeholder?: string;\n  inputOnChange: (event: any) => void;\n  id?: string;\n  autocomplete?: boolean;\n  value?: string;\n}) {\n  const label = props?.label ? props.label : \"\";\n  const placeholder = props?.placeholder ? props.placeholder : \"\";\n  const id = props?.id ? props.id : \"\";\n  const autocomplete = props.autocomplete ? \"on\" : \"off\";\n  const value = props.value ? props.value : \"\";\n\n  return (\n    <div>\n      <label htmlFor={id} className=\"block text-sm font-medium text-gray-700\">\n        {label}\n      </label>\n\n      <input\n        onChange={props.inputOnChange}\n        type=\"text\"\n        id={id}\n        autoComplete={autocomplete}\n        className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-4 pr-8 sm:text-sm border-gray-300 rounded-md\"\n        placeholder={placeholder}\n        value={value}\n      />\n    </div>\n  );\n}\n","import { Fragment, useRef, ReactElement } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n// import { ExclamationIcon } from \"@heroicons/react/outline\";\n\nexport const THEME: {\n  [key: string]: { default: string; hover: string; ring: string };\n} = {\n  DANGOR: {\n    default: \"bg-red-600\",\n    hover: \"hover:bg-red-700\",\n    ring: \"focus:ring-red-500\",\n  },\n  PRIMARY: {\n    default: \"bg-blue-600\",\n    hover: \"hover:bg-blue-700\",\n    ring: \"focus:ring-blue-500\",\n  },\n  SUCCESS: {\n    default: \"bg-green-600\",\n    hover: \"hover:bg-green-700\",\n    ring: \"focus:ring-green-500\",\n  },\n  WARNING: {\n    default: \"bg-yellow-600\",\n    hover: \"hover:bg-yellow-700\",\n    ring: \"focus:ring-yellow-500\",\n  },\n};\n\nexport default function Modal(props: {\n  open: boolean;\n  handleClose: any;\n  title: string;\n  content: ReactElement;\n  submit: { label: string; theme: typeof THEME.key; action: any };\n  cancel: any;\n}) {\n  const { open, handleClose } = props;\n\n  // const [open, setOpen] = useState(props.open);\n  const cancelButtonRef = useRef(null);\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={() => handleClose()}\n      >\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"sm:flex sm:items-start\">\n                  {/* <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                    <ExclamationIcon\n                      className=\"h-6 w-6 text-red-600\"\n                      aria-hidden=\"true\"\n                    />\n                  </div> */}\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                    <Dialog.Title\n                      as=\"h3\"\n                      className=\"text-lg leading-6 font-medium text-gray-900\"\n                    >\n                      {props.title}\n                    </Dialog.Title>\n                    <div className=\"mt-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        {props.content}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button\n                  type=\"button\"\n                  className={` w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 ${props.submit.theme.default} text-base font-medium text-white ${props.submit.theme.hover} focus:outline-none focus:ring-2 focus:ring-offset-2 ${props.submit.theme.ring} sm:ml-3 sm:w-auto sm:text-sm`}\n                  onClick={() => {\n                    props.submit.action();\n                    handleClose();\n                  }}\n                >\n                  {props.submit.label}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                  onClick={() => handleClose()}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Input from \"./Input\";\nimport Modal, { THEME } from \"./Modal\";\n\nimport { DeckContext, DECK_ACTIONS } from \"../contexts/DeckContext\";\n\nexport default function AddDeck(props: {\n  show: boolean;\n  updateShowState: (state: boolean) => void;\n}) {\n  // modal show / hide\n  const [modalOpen, setModal] = useState(false);\n  useEffect(() => {\n    if (props.show) {\n      setModal(true);\n    } else {\n      setModal(false);\n    }\n  }, [props.show]);\n\n  const handleModalClose = () => {\n    setModal(false);\n    props.updateShowState(false);\n  };\n\n  // input handeling\n  const onInputChange = (event: any) => {\n    // update local deck state\n    const updatedNewDeckData = { ...newDeckState };\n    switch (event.target.id) {\n      case \"deck-name\":\n        updatedNewDeckData.name = event.target.value;\n        setNewDeckState(updatedNewDeckData);\n        break;\n      case \"description\":\n        updatedNewDeckData.description = event.target.value;\n        setNewDeckState(updatedNewDeckData);\n        break;\n    }\n  };\n\n  // deck context\n  const { deckContextDispatch } = useContext(DeckContext);\n\n  const submitAction = () => {\n    console.log(\"submitting adding new deck\");\n    deckContextDispatch({\n      type: DECK_ACTIONS.NEW_DECK,\n      deckBones: newDeckState,\n    });\n  };\n\n  const [newDeckState, setNewDeckState] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  return (\n    <Modal\n      open={modalOpen}\n      handleClose={handleModalClose}\n      title=\"Add Deck\"\n      content={\n        <Fragment>\n          <Input\n            id=\"deck-name\"\n            label=\"Deck Name\"\n            placeholder=\"\"\n            inputOnChange={onInputChange}\n            value={newDeckState.name}\n          />\n          <Input\n            id=\"description\"\n            label=\"Description\"\n            placeholder=\"\"\n            inputOnChange={onInputChange}\n            value={newDeckState.description}\n          />\n        </Fragment>\n      }\n      submit={{ label: \"Add Deck\", theme: THEME.SUCCESS, action: submitAction }}\n      cancel={null}\n    />\n  );\n}\n\nexport const AddDeckKit = () => {\n  const [showAddDeck, setShowAddDeck] = useState(false);\n\n  return { showAddDeck, setShowAddDeck };\n};\n","import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeckContext, DECK_ACTIONS } from \"../contexts/DeckContext\";\nimport {\n  XCircleIcon,\n  DotsHorizontalIcon,\n  PencilAltIcon,\n} from \"@heroicons/react/outline\";\nimport { Popover } from \"@headlessui/react\";\n\nexport default function DeckSummary(props: { deck: Deck }) {\n  const { deck } = props;\n  const { deckContextDispatch } = useContext(DeckContext);\n  const history = useHistory();\n  function navToDeck(id: string) {\n    history.push(`/deck-view/${id}`);\n  }\n  return (\n    <div\n      className=\"mx-2 my-2 p-4 border w-72 inline-block rounded-lg cursor-pointer relative hover:shadow\"\n      onClick={(event) => {\n        if (event.target !== event.currentTarget) return;\n        navToDeck(deck.id);\n      }}\n    >\n      <Popover className=\"relative\">\n        {({ open }) => (\n          <>\n            <Popover.Button className={`absolute right-0 top-0 rounded-lg`}>\n              <DotsHorizontalIcon className={`h-6 text-gray-600`} />\n            </Popover.Button>\n            <Popover.Overlay\n              className={`${\n                open ? \"opacity-0 fixed inset-0\" : \"opacity-0\"\n              } bg-black`}\n            />\n\n            <Popover.Panel className=\"absolute z-10 w-auto right-0 top-0 rounded-md border border-gray-300 shadow-md px-2 py-2 bg-white text-base\">\n              {/* <button\n                onClick={() => {\n                  console.log(\"Edit button was pressed\");\n                }}\n                className=\"text-gray-600 px-2 py-1 mb-2 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-opacity-75 hover:bg-gray-100 flex\"\n              >\n                <span className=\"pr-2\">\n                  <PencilAltIcon className=\"w-6\" />\n                </span>\n                Edit\n              </button> */}\n              <button\n                onClick={() => {\n                  console.log(\"Deleting deck\");\n                  deckContextDispatch({\n                    type: DECK_ACTIONS.DELETE_DECK,\n                    deckId: deck.id,\n                  });\n                }}\n                className={`text-red-600 px-2 py-1 mb-1 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-red-600 focus:ring-opacity-75 hover:bg-red-100 flex`}\n              >\n                <span className=\"pr-2\">\n                  <XCircleIcon className=\"w-6\" />\n                </span>\n                Delete\n              </button>\n            </Popover.Panel>\n          </>\n        )}\n      </Popover>\n\n      <div\n        onClick={() => {\n          navToDeck(deck.id);\n        }}\n      >\n        <p className=\"text-xl\">{deck.name}</p>\n        <p className=\"text-sm text-gray-600 mb-2\">{deck.cards.length} cards</p>\n        <p>{deck.description ? deck.description : \" \"}</p>\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\n\nexport default function Button(props: {\n  children: ReactNode;\n  onClick: () => void;\n  size?: string;\n  theme?: { default: string; hover: string; ring: string };\n  className?: string;\n}) {\n  const size = props.size ? props.size : BUTTON_SIZE.MEDIUM;\n  const theme = props.theme ? props.theme : BUTTON_THEME.PRIMARY;\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={`${theme.default} ${theme.hover} ${theme.ring} ${size} ${props.className}`}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport const BUTTON_SIZE = {\n  SMALL: \"px-4 py-1 rounded\",\n  MEDIUM: \"px-4 py-3 rounded-md\",\n  LARGE: \"px-6 py-4 rounded-lg\",\n};\n\nexport const BUTTON_THEME = {\n  DANGOR: {\n    default: \"text-white bg-red-600\",\n    hover: \"hover:bg-red-700\",\n    ring: \"focus:ring-red-500\",\n  },\n  PRIMARY: {\n    default: \"text-white bg-blue-600\",\n    hover: \"hover:bg-blue-700\",\n    ring: \"focus:ring-blue-500\",\n  },\n  SUCCESS: {\n    default: \"text-white bg-green-600\",\n    hover: \"hover:bg-green-700\",\n    ring: \"focus:ring-green-500\",\n  },\n  WARNING: {\n    default: \"text-white bg-yellow-600\",\n    hover: \"hover:bg-yellow-700\",\n    ring: \"focus:ring-yellow-500\",\n  },\n};\n","import { ReactNode } from \"react\";\n\nexport default function DefaultLayout(props: { children: ReactNode }) {\n  return <div className=\"p-4\">{props.children}</div>;\n}\n","import { useContext } from \"react\";\nimport { DeckContext } from \"../contexts/DeckContext\";\nimport AddDeck, { AddDeckKit } from \"../components/AddDeck\";\nimport DeckSummary from \"../components/DeckSummary\";\nimport Button, { BUTTON_THEME, BUTTON_SIZE } from \"../components/Button\";\nimport DefaultLayout from \"../layouts/DefaultLayout\";\n\nexport default function Decks() {\n  const { deckState } = useContext(DeckContext);\n\n  const { showAddDeck, setShowAddDeck } = AddDeckKit();\n\n  return (\n    <DefaultLayout>\n      <AddDeck show={showAddDeck} updateShowState={setShowAddDeck} />\n      <div className=\"mb-4\">\n        <h1 className=\"text-xl mb-4 mr-4 inline\">Decks</h1>\n        <Button\n          onClick={() => {\n            setShowAddDeck(true);\n          }}\n          size={BUTTON_SIZE.SMALL}\n          theme={BUTTON_THEME.SUCCESS}\n          className=\"\"\n        >\n          + Add Deck\n        </Button>\n      </div>\n      {deckState.map((deck: Deck) => {\n        return <DeckSummary key={deck.id} deck={deck}></DeckSummary>;\n      })}\n    </DefaultLayout>\n  );\n}\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Input from \"./Input\";\nimport Modal, { THEME } from \"./Modal\";\n\nimport { DeckContext, DECK_ACTIONS } from \"../contexts/DeckContext\";\n\nexport default function AddCard(props: {\n  deckId: string;\n  show: boolean;\n  updateShowState: (state: boolean) => void;\n}) {\n  // modal show / hide\n  const [modalOpen, setModal] = useState(false);\n  useEffect(() => {\n    if (props.show) {\n      setModal(true);\n    } else {\n      setModal(false);\n    }\n  }, [props.show]);\n\n  const handleModalClose = () => {\n    setModal(false);\n    props.updateShowState(false);\n  };\n\n  // input handeling\n  const onInputChange = (event: any) => {\n    // update state based\n    const updatedNewCardData = { ...newCardState };\n    switch (event.target.id) {\n      case \"front-line1\":\n        updatedNewCardData.front[0] = event.target.value;\n        setNewCardState(updatedNewCardData);\n        break;\n      case \"front-line2\":\n        updatedNewCardData.front[1] = event.target.value;\n        setNewCardState(updatedNewCardData);\n        break;\n      case \"back-line1\":\n        updatedNewCardData.back[0] = event.target.value;\n        setNewCardState(updatedNewCardData);\n        break;\n      case \"back-line2\":\n        updatedNewCardData.back[1] = event.target.value;\n        setNewCardState(updatedNewCardData);\n        break;\n    }\n  };\n\n  // deck context\n  const { deckContextDispatch } = useContext(DeckContext);\n\n  const submitAction = () => {\n    deckContextDispatch({\n      type: DECK_ACTIONS.NEW_CARD,\n      deckId: props.deckId,\n      cardBones: newCardState,\n    });\n    setTimeout(() => {\n      setNewCardState({\n        front: [\"\", \"\"],\n        back: [\"\", \"\"],\n      });\n    }, 250);\n  };\n\n  const [newCardState, setNewCardState] = useState({\n    front: [\"\", \"\"],\n    back: [\"\", \"\"],\n  });\n\n  return (\n    <Modal\n      open={modalOpen}\n      handleClose={handleModalClose}\n      title=\"Add Card\"\n      content={\n        <Fragment>\n          <p>Card Front</p>\n          <Input\n            id=\"front-line1\"\n            placeholder=\"Line 1\"\n            inputOnChange={onInputChange}\n            value={newCardState.front[0]}\n          />\n          <Input\n            id=\"front-line2\"\n            placeholder=\"Line 2\"\n            inputOnChange={onInputChange}\n            value={newCardState.front[1]}\n          />\n          <p>Card Back</p>\n          <Input\n            id=\"back-line1\"\n            placeholder=\"Line 1\"\n            inputOnChange={onInputChange}\n            value={newCardState.back[0]}\n          />\n          <Input\n            id=\"back-line2\"\n            placeholder=\"Line 2\"\n            inputOnChange={onInputChange}\n            value={newCardState.back[1]}\n          />\n        </Fragment>\n      }\n      submit={{ label: \"Add Card\", theme: THEME.SUCCESS, action: submitAction }}\n      cancel={null}\n    />\n  );\n}\n\nexport const AddCardKit = () => {\n  const [showAddCard, setShowAddCard] = useState(false);\n  return { showAddCard, setShowAddCard };\n};\n","import { useContext } from \"react\";\nimport { DeckContext, DECK_ACTIONS } from \"../contexts/DeckContext\";\nimport {\n  XCircleIcon,\n  DotsHorizontalIcon,\n  PencilAltIcon,\n} from \"@heroicons/react/outline\";\nimport { Popover } from \"@headlessui/react\";\nimport Card from \"./Card\";\n\nexport default function CardSummary(props: { card: Card; deckId: string }) {\n  const { card } = props;\n  const { deckContextDispatch } = useContext(DeckContext);\n\n  const front1 = card.front[0] ? card.front[0] : \" ‎\";\n  const front2 = card.front[1] ? card.front[1] : \" ‎\";\n  const back1 = card.back[0] ? card.back[0] : \" ‎\";\n  const back2 = card.back[1] ? card.back[1] : \" ‎\";\n\n  return (\n    <div className=\"mx-2 my-2 p-4 border w-72 inline-block rounded-lg cursor-pointer relative hover:shadow\">\n      <Popover className=\"relative\">\n        <Popover.Button className={`absolute right-0 top-0 rounded-lg`}>\n          <DotsHorizontalIcon className={`h-6 text-gray-600`} />\n        </Popover.Button>\n\n        <Popover.Panel className=\"absolute z-10 w-auto right-0 top-0 rounded-md border border-gray-300 shadow-md px-2 py-2 bg-white text-base\">\n          {/* <button\n            onClick={() => {\n              console.log(\"Edit button was pressed\");\n            }}\n            className=\"text-gray-600 px-2 py-1 mb-2 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-opacity-75 hover:bg-gray-100 flex\"\n          >\n            <span className=\"pr-2\">\n              <PencilAltIcon className=\"w-6\" />\n            </span>\n            Edit\n          </button> */}\n          <button\n            onClick={() => {\n              // delete card\n              deckContextDispatch({\n                type: DECK_ACTIONS.DELETE_CARD,\n                deckId: props.deckId,\n                cardId: card.id,\n              });\n            }}\n            className={`text-red-600 px-2 py-1 mb-1 w-full rounded-md focus:outline-none focus:ring-2 focus:ring-red-600 focus:ring-opacity-75 hover:bg-red-100 flex`}\n          >\n            <span className=\"pr-2\">\n              <XCircleIcon className=\"w-6\" />\n            </span>\n            Delete\n          </button>\n        </Popover.Panel>\n      </Popover>\n\n      <div>\n        <p className=\"text-xl\">{front1}</p>\n        <p className=\"text-sm text-gray-600 mb-2\">{front2}</p>\n        <p className=\"text-xl\">{back1}</p>\n        <p className=\"text-sm text-gray-600 mb-2\">{back2}</p>\n      </div>\n    </div>\n  );\n}\n","import DefaultLayout from \"../layouts/DefaultLayout\";\n\nexport default function SelectedDeckNotFound(props: {\n  selectedDeck?: Deck | null;\n  history: any;\n}) {\n  setTimeout(() => {\n    props.history.push(`/`);\n  }, 3000);\n  return (\n    <DefaultLayout>\n      <p>Uh oh... we can't find this deck! Go back to select another deck.</p>\n      <p>You will be automatically redirected in 3 seconds.</p>\n    </DefaultLayout>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { DeckContext } from \"../contexts/DeckContext\";\nimport { useContext } from \"react\";\nimport AddCard, { AddCardKit } from \"../components/AddCard\";\nimport Button, { BUTTON_THEME, BUTTON_SIZE } from \"../components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport CardSummary from \"../components/CardSummary\";\nimport { PlayIcon } from \"@heroicons/react/solid\";\nimport DefaultLayout from \"../layouts/DefaultLayout\";\nimport SelectedDeckNotFound from \"../components/SelectedDeckNotFound\";\n\nexport default function DeckView() {\n  const { id } = useParams<{ id: string }>();\n  const { deckState } = useContext(DeckContext);\n\n  const history = useHistory();\n\n  const { showAddCard, setShowAddCard } = AddCardKit();\n\n  if (!id) {\n    history.push(`/`);\n    return null;\n  }\n\n  const selectedDeck: Deck = deckState.find(\n    (element: Deck) => element.id === id\n  );\n\n  if (!selectedDeck) {\n    console.log(\"Deck not selected \", selectedDeck);\n    return SelectedDeckNotFound({ selectedDeck, history });\n  }\n\n  return (\n    <DefaultLayout>\n      <AddCard\n        deckId={id}\n        show={showAddCard}\n        updateShowState={setShowAddCard}\n      />\n      <div className=\"mb-4\">\n        <h1 className=\"text-xl mb-4 inline\">{selectedDeck.name}</h1>\n        <Button\n          className=\" ml-4\"\n          onClick={() => {\n            setShowAddCard(true);\n          }}\n          size={BUTTON_SIZE.SMALL}\n          theme={BUTTON_THEME.SUCCESS}\n        >\n          + Add Card\n        </Button>\n        <Button\n          className=\" ml-4\"\n          onClick={() => {\n            history.push(`/study-mode/${id}`);\n          }}\n          size={BUTTON_SIZE.SMALL}\n          theme={BUTTON_THEME.PRIMARY}\n        >\n          <div className=\"flex items-baseline\">\n            <PlayIcon className=\"h-4 mr-2 self-center\" />\n\n            <span className=\"\">Play</span>\n          </div>\n        </Button>\n      </div>\n      <p>{selectedDeck.description}</p>\n\n      <div>\n        {selectedDeck.cards.map((card: Card) => {\n          return <CardSummary key={card.id} card={card} deckId={id} />;\n        })}\n      </div>\n    </DefaultLayout>\n  );\n}\n","export default function Card(props: {\n  card: Card;\n  className?: string;\n  flip?: Boolean;\n}) {\n  return (\n    <div className={`max-w-lg ${props.className}`}>\n      <div className=\"sm:aspect-w-9 sm:aspect-h-14 md:aspect-w-14 md:aspect-h-9\">\n        <div className=\"p-4 bg-white rounded-lg shadow\">\n          {!props.flip && (\n            <div id=\"front\" className=\"grid grid-cols-1 grid-rows-3 h-full\">\n              <span className=\"font-semibold text-gray-400\">Question</span>\n              <div className=\"row-start-2 text-center\">\n                <p className=\"font-semibold text-xl\">{props.card.front[0]}</p>\n                <p>{props.card.front[1]}</p>\n              </div>\n            </div>\n          )}\n\n          {props.flip && (\n            <div id=\"back\" className=\"grid grid-cols-1 grid-rows-3 h-full\">\n              <span className=\"font-semibold text-gray-400\">Answer</span>\n              <div className=\"row-start-2 text-center\">\n                <p>{props.card.back[0]}</p>\n                <p>{props.card.back[1]}</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useParams } from \"react-router\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { DeckContext } from \"../contexts/DeckContext\";\nimport Button from \"../components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport { navHeight as navigationHeight } from \"../components/Nav\";\nimport SelectedDeckNotFound from \"../components/SelectedDeckNotFound\";\n\nimport {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  ArrowUpIcon,\n} from \"@heroicons/react/outline\";\n\nexport default function StudyMode(props: {}) {\n  const { id } = useParams<{ id: string }>();\n  const { deckState } = useContext(DeckContext);\n\n  // Get the selected deck from the id parameter\n  const selectedDeck: Deck | null = useMemo(() => {\n    return deckState.find((element: Deck) => element.id === id);\n  }, [id, deckState]);\n\n  // card flip state & logic\n  const [flip, setFlip] = useState(false);\n  const flipCard = useCallback(() => {\n    setFlip(!flip);\n  }, [flip]);\n\n  // selecting a card to render\n  const numberOfCards = useMemo(() => {\n    if (selectedDeck) return selectedDeck.cards.length;\n    else return 0;\n  }, [selectedDeck]);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const changeCard = useCallback(\n    (steps: number) => {\n      let newIndex = selectedCard + steps;\n      if (flip) setFlip(false);\n      while (newIndex > numberOfCards - 1) {\n        newIndex = newIndex - numberOfCards;\n      }\n      while (newIndex < 0) {\n        newIndex = newIndex + numberOfCards;\n      }\n      setSelectedCard(newIndex);\n    },\n    [numberOfCards, selectedCard, flip]\n  );\n\n  // vars used to make div full height\n  const [navHeight, setNavHeight] = useState(0);\n  useEffect(() => {\n    const height = navigationHeight();\n    setNavHeight(height ? height : 0);\n  }, []);\n\n  // register key press events\n  const keyRouts = useCallback(\n    (e: any) => {\n      if (e.isComposing || e.keyCode === 229) {\n        return;\n      }\n      switch (e.key) {\n        case \"ArrowRight\":\n          changeCard(1);\n          break;\n        case \"ArrowLeft\":\n          changeCard(-1);\n          break;\n        case \"ArrowUp\":\n          flipCard();\n          break;\n      }\n    },\n    [changeCard, flipCard]\n  );\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyRouts);\n    return () => {\n      document.removeEventListener(\"keydown\", keyRouts);\n    };\n  }, [keyRouts]);\n\n  // navigate back to dashboard if no deck id is given\n  const history = useHistory();\n  if (!id) {\n    history.push(`/`);\n    return null;\n  }\n  if (!selectedDeck) {\n    return SelectedDeckNotFound({ selectedDeck, history });\n  }\n\n  return (\n    <div\n      className=\"grid\"\n      style={{\n        height: `calc(100vh - ${navHeight}px)`,\n        gridTemplateRows: \"1fr minmax(0, 2fr) 1fr\",\n        gridTemplateColumns: \"1fr minmax(0, 2fr) 1fr\",\n      }}\n    >\n      <div className=\"mb-4 pt-4 pl-4 col-span-2\">\n        <h1 className=\"text-xl\">Let's Study</h1>\n        <p>{`${selectedCard}/${numberOfCards}`} Cards</p>\n      </div>\n      <button\n        className=\"row-start-3 md:row-start-2 col-start-1 mr-auto p-8 mt-auto mb-2 md:mb-0 md:mt-0\"\n        onClick={() => changeCard(-1)}\n      >\n        <ArrowLeftIcon className=\"w-8\" />\n      </button>\n      <button\n        className=\"row-start-3 md:row-start-2 col-start-3 ml-auto p-8 mt-auto mb-2 md:mb-0 md:mt-0\"\n        onClick={() => changeCard(1)}\n      >\n        <ArrowRightIcon className=\"w-8\" />\n      </button>\n      <Button\n        className=\"mt-auto mb-8 row-start-3 col-start-2 justify-self-center w-full max-w-xs\"\n        onClick={flipCard}\n      >\n        Flip\n        <ArrowUpIcon className=\"hidden md:inline h-4 ml-4 text-blue-400\" />\n      </Button>\n      <div className=\"col-span-3 md:col-span-1 m-4 md:m-0 row-start-2 md:col-start-2 self-center\">\n        <Card\n          card={selectedDeck.cards[selectedCard]}\n          className=\"mx-auto\"\n          flip={flip}\n        />\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { DeckContextProvider } from \"./contexts/DeckContext\";\nimport Nav from \"./components/Nav\";\nimport Decks from \"./pages/Decks\";\nimport DeckView from \"./pages/DeckView\";\nimport StudyMode from \"./pages/StudyMode\";\n\nfunction App() {\n  return (\n    <Router>\n      <DeckContextProvider>\n        <Nav />\n        <div className=\"\">\n          <Route exact path=\"/\" component={Decks} />\n          <Route exact path=\"/deck-view\" component={DeckView} />\n          <Route path=\"/deck-view/:id\" component={DeckView} />\n          <Route exact path=\"/study-mode\" component={StudyMode} />\n          <Route path=\"/study-mode/:id\" component={StudyMode} />\n        </div>\n      </DeckContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler ) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n "],"sourceRoot":""}